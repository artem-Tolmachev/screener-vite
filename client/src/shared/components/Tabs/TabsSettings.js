import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useAppDispatch, useAppSelector } from "@/app/store/store";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle, } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Tabs, TabsContent, TabsList, TabsTrigger, } from "@/components/ui/tabs";
import { setFilter } from "@/pages/ordersBookPage/ordesData/slices/slicesOrdersBook";
import { VisuallyHidden } from '@radix-ui/react-visually-hidden';
import { useState } from "react";
import { RadioButtonsOrderbookFilter } from "../RadioButtons/RadioButtonsOrderbookFilter";
import { SelectOfOrderBookPage } from "../Select/SelectOfOrderBookPage";
export function TabsSettings({ hideAllColumns, columnsOfTable, toggleCheckBox, radioBtn, setRadioBtn }) {
    const filter = useAppSelector((state) => state.ordersBook.ordersFilter);
    const [value, setValue] = useState(filter);
    const dispatch = useAppDispatch();
    const pushOptionsForOrderBook = () => {
        dispatch(setFilter(value));
    };
    return (_jsx("div", { className: "max-w-full flex w-full h-full flex-col gap-6 rounded-[100px] pb-9", children: _jsxs(Tabs, { defaultValue: "account", children: [_jsxs(TabsList, { className: "w-full max-w-full h-[50px] border-b-2 border-b-gray-600 pb-[-5px]", children: [_jsx(TabsTrigger, { value: "account", className: "text-gray-400 text-xl mb-[-4px]", children: "\u0421\u043A\u0440\u0438\u043D\u0435\u0440" }), _jsx(TabsTrigger, { value: "password", className: "text-gray-400 text-xl mb-[-4px]", children: "\u041D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438" })] }), _jsx(TabsContent, { value: "account", children: _jsxs(Card, { className: "pt-5", children: [_jsx(VisuallyHidden, { children: _jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "\u0424\u0438\u043B\u044C\u0442\u0440 \u043E\u0440\u0434\u0435\u0440\u043E\u0432" }), _jsx(CardDescription, { children: "\u0412\u043D\u0435\u0441\u0438\u0442\u0435 \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F" })] }) }), _jsxs(CardContent, { className: "grid gap-6 rounded-3xl", children: [_jsxs("div", { className: "grid gap-3", children: [_jsx(Label, { htmlFor: "tabs-demo-name", className: "text-lg", children: "\u0411\u043B\u0438\u0437\u043E\u0441\u0442\u044C \u0437\u0430\u044F\u0432\u043A\u0438 \u043A \u0446\u0435\u043D\u0435(%):" }), _jsx(Input, { className: "text-lg md:text-lg", value: value.distance, onChange: (e) => setValue((prev) => ({ ...prev, distance: Number(e.target.value) })) })] }), _jsxs("div", { className: "grid gap-3", children: [_jsx(Label, { htmlFor: "tabs-demo-username", className: "text-lg", children: "\u0414\u043B\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0441\u0442\u044C \u0437\u0430\u044F\u0432\u043A\u0438(\u043C\u0438\u043D\u0443\u0442\u044B):" }), _jsx(Input, { onChange: (e) => setValue(prev => ({ ...prev, range: Number(e.target.value) })), id: "tabs-demo-username", value: value.range, className: "text-lg md:text-lg" })] }), _jsxs("div", { className: "grid gap-3", children: [_jsx(Label, { htmlFor: "tabs-demo-username", className: "text-lg", children: "\u0420\u0430\u0437\u043C\u0435\u0440 \u0437\u0430\u044F\u0432\u043A\u0438($):" }), _jsx(Input, { onChange: (e) => setValue(prev => ({ ...prev, minValue: Number(e.target.value) })), id: "tabs-demo-username", className: "text-lg md:text-lg", value: value.minValue })] })] }), _jsx(CardFooter, { children: _jsx(Button, { onClick: pushOptionsForOrderBook, className: "text-lg w-full cursor-pointer bg-blue-950 border-2 border-transparent text-gray-400 hover:border-gray-400 hover:bg-transparent hover:text-gray-400", children: "\u0421\u043E\u0445\u0440\u0430\u043D\u0438\u0442\u044C \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B" }) })] }) }), _jsx(TabsContent, { value: "password", children: _jsxs(Card, { className: "pt-5", children: [_jsx(CardHeader, { children: _jsx(CardTitle, { className: "text-lg", children: "\u041F\u043E\u043A\u0430\u0437\u044B\u0432\u0430\u0442\u044C \u043F\u043E\u043B\u044F \u0434\u043B\u044F \u0441\u043A\u0440\u0438\u043D\u0435\u0440\u0430" }) }), _jsxs(CardContent, { className: "", children: [_jsxs("div", { className: "items-center bg-gray-600 flex justify-between  border-1 rounded-[8px] border-blue-700 w-full min-h-5 p-2", children: [_jsx("div", { className: "buttons-wr flex flex-wrap space-x-2 space-y-2 flex-[1_1_0%]", children: columnsOfTable.filter(col => col.visible !== 0).length === 0 ? (_jsx("span", { className: "text-gray-400 text-3xl", children: "..." })) : (columnsOfTable.map((button) => button.visible !== 0 && (_jsxs("button", { onClick: () => toggleCheckBox(button.key), className: "flex cursor-pointer bg-gray-800 py-2 px-2 max-h-[40px] w-fit hover:bg-gray-900", children: [button.name, _jsxs("svg", { xmlns: "http://www.w3.org/2000/svg", width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", stroke: "currentColor", strokeWidth: "2", strokeLinecap: "round", strokeLinejoin: "round", className: "lucide lucide-x ml-2", children: [_jsx("path", { d: "M18 6 6 18" }), _jsx("path", { d: "m6 6 12 12" })] })] }, button.key)))) }), _jsx(SelectOfOrderBookPage, { toggleCheckBox: toggleCheckBox, columnsOfTable: columnsOfTable })] }), _jsx("div", { className: "radioButtons-wr mt-2", children: _jsx(RadioButtonsOrderbookFilter, { radioBtn: radioBtn, setRadioBtn: setRadioBtn }) })] }), _jsx(CardFooter, { children: _jsx(Button, { onClick: hideAllColumns, className: "text-lg w-full cursor-pointer bg-blue-800 border-2 border-transparent hover:border-blue-700 hover:bg-transparent hover:text-blue-700", children: "\u0421\u0431\u0440\u043E\u0441\u0438\u0442\u044C \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B" }) })] }) })] }) }));
}
